"""Remove updated_at column, replace with created_at for time-based sorting in the frontend

Revision ID: d1012bd037ec
Revises: 745fb60934e4
Create Date: 2025-06-04 18:32:12.957956

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa 
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd1012bd037ec'
down_revision: Union[str, None] = '745fb60934e4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workout_logs', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.drop_constraint('log_fingerprint', 'workout_logs', type_='unique')
    op.create_unique_constraint('log_fingerprint', 'workout_logs', ['user_uid', 'exercise_eid', 'reps', 'weight', 'date_performed', 'created_at'])
    op.drop_column('workout_logs', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workout_logs', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_constraint('log_fingerprint', 'workout_logs', type_='unique')
    op.create_unique_constraint('log_fingerprint', 'workout_logs', ['user_uid', 'exercise_eid', 'reps', 'weight', 'date_performed', 'updated_at'])
    op.drop_column('workout_logs', 'created_at')
    # ### end Alembic commands ###
